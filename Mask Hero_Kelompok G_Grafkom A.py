# Mask Hero - Kelompok G - Grafika Komputer A
# Eni Khusnul Khotimah  202410103006
# Martin Chandra        202410103032

# ------- PERHATIAN ---------
# JIKA RESOLUSI PERMAINAN TERLALU BESAR HINGGA MELEBIHI LAYAR LAPTOP ATAU PC SILAHKAN UBAH NILAI VARIABEL DI BAWAH INI DENGAN XSCREEN = 940, YSCREEN = 600 
xscreen,yscreen = 1440,1000

# Event-event yang terjadi pada waktu tertentu
# menit 5:00 muncul Tamas
# menit 4:30 muncul Vuris + jalan sedikit melambat saat ada virus
# menit 4:00 Vuris bisa gerak                
# menit 3:30 Tamas nambah                    
# menit 3:00 Tamas jadi Mater lebih cepet
# menit 2:30 Vuris nambah              
# menit 2:00 Kecepatan Vuris nambah
# menit 1:00 Mati lampu
# menit 0:00 Menang

from OpenGL.GL import*
from OpenGL.GLU import*
from OpenGL.GLUT import*
from random import *
from math import *
import json

keystates, start_menu, masker_click, waktu_habis, ganti_detik,petunjuk = [False] * 256, True, False, False, False,False
pos_x, pos_y, nyawa, pos_karakter, pos_mater, pos_virus, pos_virus1 = 0, 0, 3, {}, {}, {}, {}
timer, score, batas_waktu, spawn, move, xvir,yvir,z, waktu_spawn, sel_pos, detik,move1, xvir1,yvir1,z1,page = 0, 0, 500, 8, 'stop',0,0,0,0,0,'abc','stop',0,0,0,1

data_score = {'hiscore':0}
try:
    with open('hiscore.json', 'r') as file:
        data_score = json.load(file)
except json.decoder.JSONDecodeError:
    with open('hiscore.json', 'w') as file:
        json.dump(data_score, file)
except FileNotFoundError:
    with open('hiscore.json', 'x') as File:
        json.dump(data_score, File)

rand_x, rand_y = randint(25, 1415), randint(25, 885)
if rand_x in range(690, 750):
    rand_y = (choices((randint(25,720), randint(780,885))))[0]
pos_karakter[len(pos_karakter)] = [rand_x, rand_y]

data_angka = {'0':([127,995,137,995,137,992,130,992,130,958,127,958,127,995],[137,955,127,955,127,958,134,958,134,992,137,992,137,955]), '1':([133.5,995,130.5,995,130.5,955,133.5,955,133.5,995], [127,955,127,958,137,958,137,955,127,955], [133.5,995,130.5,995,127,991,130,991,133.5,995]), '2':([137,995,127,995,127,992,134,992,134,976.5,137,976.5,137,995], [127,976.5,137,976.5,137,973.5,130,973.5,130,958,127,958,127,976.5], [127,955,127,958,137,958,137,955,127,955]), '3':([137,995,127,995,127,992,134,992,134,958,137,958,137,995], [127,955,127,958,137,958,137,955,127,955], [127,976.5,127,973.5,137,973.5,137,976.5,127,976.5]), '4':([133,995,136,995,136,955,133,955,133,995],[127,967,127,970,137,970,137,967,127,967],[127,970,130,970,136,995,133,995,127,970]), '5':([127,995,137,995,137,992,130,992,130,976.5,127,976.5,127,995],[137,976.5,127,976.5,127,973.5,134,973.5,134,958,137,958,137,976.5],[127,955,127,958,137,958,137,955,127,955]), '6':([127,995,137,995,137,992,130,992,130,955,127,955,127,995],[137,976.5,127,976.5,127,973.5,134,973.5,134,955,137,955,137,976.5],[127,955,127,958,137,958,137,955,127,955]), '7':([127,995,127,992,137,992,137,995,127,995],[137,992,134,992,127,955,130,955,137,992]), '8':([127,995,137,995,137,992,130,992,130,958,127,958,127,995,],[137,955,127,955,127,958,134,958,134,992,137,992,137,955],[127,976.5,127,973.5,137,973.5,137,976.5,127,976.5]), '9':([137,995,127,995,127,992,134,992,134,958,137,958,137,995], [127,955,127,958,137,958,137,955,127,955], [127,973.5,137,973.5,137,976.5,130,976.5,130,992,127,992,127,973.5])}

# def yang dicopy lengkap hanya def drawing.. dan def display sisanya hanya tulis nama defnya aja

# fungsi untuk menggambar
def drawing_polygon(koordinat, x, y, red, blue, green):
    glColor3ub(red,blue,green) 
    for j in koordinat:
        glBegin(GL_POLYGON)
        for i in range(0,len(j),2):
            if i != len(j)-2:
                glVertex2f(j[i] + x,j[i+1] + y)
        glEnd()

def drawing_circle(tp_x, tp_y, x, y, r, red, blue, green, tipe):
    glColor3ub(red,blue,green) 
    glBegin(tipe)
    # jari2 * (.../jumlah garis pembentuk lingkaran) + titik pusat lingkaran + perpindahan
    for i in range(100):    
        cosine = r * cos(i*2*pi/64) + tp_x + x    
        sine  = r * sin(i*2*pi/64) + tp_y + y  
        glVertex2f(cosine,sine)
    glEnd()

def drawing_lines(koordinat, x, y):
    glColor3f(0,0,0)
    for j in koordinat:
        glBegin(GL_LINES)
        for i in range(0,len(j),2):
            if i != len(j)-2:
                glVertex2f(j[i] + x,j[i+1] + y)
                glVertex2f(j[i+2] + x,j[i+3] + y)
        glEnd()

def drawing_text(x,y,char):
    glRasterPos2f(x,y)
    for i in range(len(char)):
        glutBitmapCharacter(GLUT_BITMAP_HELVETICA_12, ord(char[i]))

#fungsi objek dan beserta tampilannya
def masman_ingame():
    kulit, rambut, alis, masker, garis_masker = [[705,752,702.5,752,700,749.5,700,744.5,702.5,742,705,742,705,739.5,719.8,732.3,734.5,739.5,734.5,742,737,742,739.5,744.5,739.5,749.5,737,752,734.5,752,734.5,762,705,762,705,752]], [[708.5, 765.5, 705, 763, 702.5, 760.5, 702.5, 754.5, 705, 752, 705, 756, 707.5, 754.5, 705, 758, 713, 755.5, 708.5, 759.5, 716, 756, 716, 760.5, 719.5, 757, 722, 760.5, 727.5, 757, 731, 759.5, 734.5, 757, 734.5, 752, 737, 754.5, 737, 760.5, 729.5, 765.5, 728, 765.5, 724.5, 767, 712, 767, 711, 765.5, 708.5, 765.5]], [[707,752,711,753,716,753,716,754.5,711,754.5,707,752], [723.5,753.3,728.3,753.3,732,752,728.3,754.5,723.5,754.5,723.5,753.3]], [[719.8,746,707.5,748.5,707.5,738.5,719.8,732.3,732,738.5,732,748.5,719.8,746]], [[705,752,707.5,748.5,707.5,738.5,719.8,732.3,732,738.5,732,748.5,734.5,752,732,748.5,719.8,746,707.5,748.5], [710,744.5,719.8,742,729.5,744.5], [729.5,741,719.8,738.5,710,741]]

    drawing_circle(720, 750, pos_x, pos_y, 25, 255, 255, 255, GL_POLYGON)
    drawing_circle(720, 750, pos_x, pos_y, 75, 0, 0, 0, GL_LINES)
    drawing_polygon(kulit, pos_x, pos_y, 243,228,208)
    drawing_polygon(rambut, pos_x, pos_y, 94,95,95)
    drawing_polygon(alis, pos_x, pos_y, 23,13,1)
    drawing_polygon(masker, pos_x, pos_y, 71,194,255)
    drawing_lines(garis_masker, pos_x, pos_y)
    drawing_circle(713, 751, pos_x, pos_y, 1, 0, 0, 0, GL_POLYGON)
    drawing_circle(726, 751, pos_x, pos_y, 1, 0, 0, 0, GL_POLYGON)

def tamas_ingame(x, y):
    rambut_laki, rambut_perempuan, kulit, alis, mulut = [[24,39,15,39,12,36,11,33,11,30,12,30,13,33,22,29,24,33,25,29,25,33,28,28,28,33,33,30,35,33,37,30,39,30,39,33,38,36,36,39,24,39]],[[7,16,15,7,12,18,12,39,9,37,7,34,7,16],[42,16,34,7,37,18,37,39,40,37,42,34,42,16],[24,36,15,40,12,39,12,30,15,27.5,17.5,31,20,27.5,20,30,22.5,25,25,28,27.5,25,29,29,32,27,34,29,36,26.5,37,30,37,39,35,40,24,36]],[[12,30,9,30,7,28,7,23,9,20,12,20,12,15,24,9,37,15,37,20,39,20,42,23,42,28,39,30,37,30,37,35,13,34,12,30]], [[14,25,16,26.5,22,26.5,22,26,16,26,14,25],[34,25,32,26.5,26,26.5,26,26,32,26,34,25]], [[19,17,21,15.5,27,15.5,29,17,19,17]]

    drawing_polygon(kulit, x, y, 243,228,208)
    if (x+y) % 2 == 0:
        drawing_polygon(rambut_laki, x, y, 102,0,0)
    else:
        drawing_polygon(rambut_perempuan, x, y, 153,102,51)
    drawing_polygon(alis, x, y, 0,0,0)
    drawing_polygon(mulut, x, y, 0,0,0)
    drawing_circle(19,23,x,y,1,0,0,0,GL_POLYGON)
    drawing_circle(29,23,x,y,1,0,0,0,GL_POLYGON)

def vuris_ingame(x, y,red,green,blue):
    kotak = [[25,25,22,6,25,25,15,13,25,25,11,21,25,25,6,28,25,25,13,34,25,25,17,42,25,25,28,41,25,25,37,37,25,25,44,29.5,25,25,42,19,25,25,37,15,25,25,33,9]]
    drawing_circle(25,25,x,y,25,red,green,blue,GL_POLYGON)
    drawing_lines(kotak,x,y)
    drawing_circle(25,25,x,y,12.5,0,102,204,GL_POLYGON)
    for i in ([22,6],[15,13],[11,21],[6,28],[13,34],[17,42],[28,41],[37,37],[44,29.5],[42,19],[37,15],[33,9],[29,17],[18,19],[21,33]):
        drawing_circle(i[0],i[1],x,y,2,0,76,153,GL_POLYGON)

def background_ingame():
    jalan, bangku, tanah, garis_tanah, pohon = [[0,0,1440,0,1440,950,0,950,0,0]], [[290,380,385,380,385,405,290,405,290,380], [190,545,285,545,285,570,190,570,190,545], [835,760,860,760,860,855,835,855,835,760], [1160,545,1250,545,1250,570,1160,570,1160,540]], [[0,0,580,0,580,380,0,380,0,0], [0,570,580,570,580,950,0,950,0,570], [860,570,1440,570,1440,950,860,950,860,570], [860,0,1440,0,1440,380,860,380,860,0]],[[580,0,580,380,0,380,0,570,580,570,580,950,860,950,860,570,1440,570,1440,380,860,380,860,0]], [[95,950,165,940,210,930,255,935,285,915,285,875,240,860,255,835,215,820,180,780,115,795,100,785,35,810,40,845,25,875,65,900,65,930,95,950], [315,730,370,745,415,755,470,735,510,690,480,635,420,605,350,610,320,640,305,665,325,685,315,730], [965,855,1040,900,1115,910,1165,875,1170,820,1095,805,1010,830,965,855], [1240,820,1305,880,1375,855,1420,825,1430,755,1355,745,1285,765,1240,820], [940,675,975,750,1070,760,1150,730,1195,690,1135,660,1030,655,940,675], [980,275,1020,340,1100,330,1160,295,1170,240,1120,210,1020,215,980,275], [1215,215,1240,265,1295,320,1365,315,1405,285,1420,250,1415,145,1345,115,1275,135,1260,170,1215,215], [935,85,920,145,1015,170,1075,155,1135,120,1155,95,1160,55,1130,15,1040,20,935,35,935,85], [35,155,60,195,130,235,190,235,245,215,285,220,325,205,360,150,360,110,340,65,290,60,250,40,175,45,125,45,85,75,70,110,35,155]]

    drawing_polygon(jalan, 0, 0, 160,160,160)
    drawing_circle(720, 475, 0, 0, 80, 240,240,240, GL_POLYGON)
    drawing_circle(720, 475, 0, 0, 70, 153,255,255, GL_POLYGON)
    drawing_circle(720, 475, 0, 0, 25, 240,240,240, GL_POLYGON)
    drawing_polygon(bangku, 0, 0, 32,32,32)
    drawing_polygon(tanah, 0, 0, 200,157,124)
    drawing_lines(garis_tanah, 0, 0)
    drawing_polygon(pohon, 0, 0, 0, 153, 0)

def masman_startmenu():
    kulit, rambut, masker, garis_masker, alis, maskhero, kotak1, kotak2, segitiga, garis_kotak, kotak3, kotak4, exit, hiscore_teks, kotak5,kotak6, howtoplay = [[631,764,616,764,601,749,601,719,616,704,631,704,631,689,720,644,810,688,810,704,825,704,840,718,840,748,825,763,810,763,810,820,631,820,631,764]], [[654,846,632,831,616,816,616,779,631,764,631,786,646,778,631,801,681,780,654,808,698,786,698,816,721,791,736,816,769,793,788,807,810,793,810,763,825,778,825,815,780,845,773,845,751,853,676,853,669,846,654,846]], [[646,742,646,682,720,644,795,681,795,742,720,726,646,742]], [[631,764,646,741,646,682,720,644,795,681,795,741,810,763,795,741,720,741,646,741]], [[668,771,698,771,698,778,668,778,646,764,668,771], [772,771,742,771,742,778,772,778,795,763,772,771]], [[651,710,656,710,656,736,651,736,651,710],[678,710,683,710,683,736,678,736,678,710],[651,736,659,736,673,725,665,725,651,736],[665,725,673,725,683,736,678,736,665,725],[701.5,736,680,710,688,710,701.5,728,712,710,720,710,701.5,736],[690,718,692,721,710,721,712,718,688,718],[715,710,750,710,755,714,715,714,715,710], [751,710,755,714,755,723,751,723,751,710],[725,736,720,732,755,732,755,736,725,736],[725,736,721,731,721,723,725,723,725,736],[721,721,721,725,755,725,755,721,720,721], [758,710,763,710,763,736,758,736,758,710],[763,720,763,725,783,736,790,736,763,720],[790,710,785,710,770,725,775,728,790,710], [651,705,656,705,656,680,651,680,680,705], [678,705,673,705,673,680,678,680,678,705], [656,690,656,695,674,695,674,690,656,690], [682,680,687,680,687,705,682,705,682,680], [687,705,715,705,715,701,687,701,687,705], [687,680,687,684,715,684,715,680,687,680], [687,690.5,687,694.5,715,694.5,715,690.5,687,690], [720,705,725,705,725,680,720,680,720,705], [750,705,720,705,720,700,745,700,745,690,750,690,750,705], [745,690,745,695,720,695,720,690,745,690], [750,680,743,680,727,695,735,695,750,680], [755,705,790,705,790,700,760,700,760,680,755,680,755,705], [790,680,755,680,755,685,785,685,785,705,790,705,790,680]], [[600,300,840,300,840,500,600,500,600,300]], [[640,340,800,340,800,460,640,460,640,340]], [[700,375,750,400,700,425,700,375]], [[600,300,840,300,840,500,600,500,640,460,800,460,840,500,800,460,800,340,840,300,800,340,640,340,600,300,640,340,640,460], [700,375,750,400,700,425,700,375]], [[550,150,890,150,890,250,550,250,550,150]], [[570,170,870,170,870,230,570,230,570,170]],[[580,50,585,50,585,90,580,90,580,50], [580,90,580,85,645,85,645,90,580,90], [580,50,580,55,645,55,645,50,580,50], [580,72.5,580,67.5,645,67.5,645,72.5,580,72.5], [650,50,658,50,715,90,707,90,650,50], [650,90,658,90,715,50,707,50,650,90], [725,90,725,85,785,85,785,90,725,90], [757.5,90,752.5,90,752.5,50,757.5,50,757,90], [725,50,725,55,785,55,785,50,725,50], [795,90,795,85,860,85,860,90,795,90], [830,90,825,90,825,50,830,50,830,90]], [[5,955,8,955,8,995,5,995,5,955], [8,976.5,8,973.5,18,973.5,18,976.5,8,976.5], [18,955,21,955,21,995,18,995,18,955], [24,995,24,992,34,992,34,995,24,995], [30.5,992,27.5,992,27.5,958,30.5,958,30.5,992], [24,955,24,958,34,958,34,955,24,955], [36,976.5,36,973.5,46,973.5,46,976.5,36,976.5], [50,995,60,995,60,992,53,992,53,976.5,50,976.5,50,995],[50,976.5,50,973.5,60,973.5,60,976.5,50,976.5], [60,955,50,955,50,958,57,958,57,976.5,60,976.5,60,955], [63,995,73,995,73,992,66,992,66,958,63,958,63,995], [63,955,63,958,73,958,73,955,63,955], [76,995,86,995,86,992,79,992,79,958,76,958,76,995], [86,955,76,955,76,958,83,958,83,992,86,992,86,955], [89,995,99,995,99,992,92,992,92,955,89,955,89,995], [99,973.5,92,973.5,92,976.5,96,976.5,96,992,99,992,99,973.5], [99,955,96,955,91,976.5,94,976.5,99,955], [102,995,112,995,112,992,105,992,105,958,102,958,102,995], [102,955,102,958,112,958,112,955,102,955], [102,973.5,102,976.5,112,976.5,112,973.5,102,973.5], [118,971.5,121,971.5,121,968.5,118,968.5,118,971.5], [118,978.5,121,978.5,121,981.5,118,981.5,118,978.5]], [[550,20,890,20,890,120,550,120,550,20]], [[570,40,870,40,870,100,570,100,570,40]], [[580,197.5,580,180,585,180,585,197.5,603,197.5,603,202.5,585,202.5,585,220,580,220,580,197.5],[603,180,598,180,598,220,603,220,603,180],[606,220,629,220,629,215,611,215,611,180,606,180,606,220],[629,180,606,180,606,185,624,185,624,220,629,220,629,180],[637,190,637,220,632,220,632,180,637,180,643.5,197.5,643.5,208.5,637,190],[650,190,650,220,655,220,655,180,650,180,643.5,197.5,643.5,208.5,650,190],[696.5,220,684,220,684,215,694,215,694,180,699,180,699,215,707,215,707,220,696.5,220],[710,220,733,220,733,215,715,215,715,180,710,180,710,220],[733,180,710,180,710,185,728,185,728,220,733,220,733,180],[767,220,790,220,790,215,772,215,772,180,767,180,767,220],[790,197.5,790,220,785,220,785,202.5,767,202.5,767,197.5,790,197.5],[793,180,816,180,816,185,798,185,798,220,793,220,793,180],[830.5,219,819,180,824,180,830.5,205,837,180,842,180,830.5,219],[824,190.5,824,193.5,837,193.5,837,190.5,824,190.5],[846,202.5,851,202.5,851,180,846,180,846,202.5],[848.5,202.5,855,220,860,220,848.5,195,837,220,842,220,848.5,202.5]]
    drawing_circle(720, 750, 0, 0, 150, 255,255,255, GL_POLYGON)
    drawing_polygon(kulit, 0, 0, 243,228,208)
    drawing_polygon(rambut, 0, 0, 94,95,95)
    drawing_polygon(masker, 0, 0, 71,194,255)
    drawing_lines(garis_masker , 0, 0)
    drawing_polygon(alis, 0, 0, 23,13,1)
    drawing_circle(679,756, 0, 0, 5, 0,0,0, GL_POLYGON)
    drawing_circle(762,756, 0, 0, 5, 0,0,0, GL_POLYGON)
    drawing_polygon(maskhero, 0, 0, 0,0,0)
    drawing_polygon(kotak1, 0, 0, 153,76,0)
    drawing_polygon(kotak2, 0, 0, 255,204,204)
    drawing_polygon(segitiga, 0, 0, 255,255,255)
    drawing_lines(garis_kotak , 0, 0)
    drawing_polygon(kotak3, 0, 0, 153,76,0)
    drawing_polygon(kotak4, 0, 0, 255,204,204)
    drawing_polygon(hiscore_teks, 0, 0, 0,0,0)
    drawing_polygon(kotak5, 0, 0, 153,76,0)
    drawing_polygon(kotak6, 0, 0, 255,204,204)
    drawing_polygon(exit,0,0,0,0,0)
    drawing_polygon(howtoplay,0,0,0,0,0)

    hi_score = str(data_score['hiscore'])
    for j in range(len(hi_score)):
        for k in data_angka[hi_score[j]]:
            glBegin(GL_POLYGON)
            for i in range(0,len(k),2):
                if i != len(k)-2:
                    glVertex2f(k[i]+(13*j),k[i+1])
            glEnd()

def game_over():
    kulit, rambut, masker, garis_masker, matax, gameover, kotak1, kotak2, coba, garis_coba, kotak3, kotak4, exit = [[631,764,616,764,601,749,601,719,616,704,631,704,631,689,720,644,810,688,810,704,825,704,840,718,840,748,825,763,810,763,810,820,631,820,631,764]], [[654,846,632,831,616,816,616,779,631,764,631,786,646,778,631,801,681,780,654,808,698,786,698,816,721,791,736,816,769,793,788,807,810,793,810,763,825,778,825,815,780,845,773,845,751,853,676,853,669,846,654,846]], [[646,742,646,682,720,644,795,681,795,742,720,726,646,742]], [[631,764,646,741,646,682,720,644,795,681,795,741,810,763,795,741,720,741,646,741]], [[668,771,673,771,703,750,698,750,668,771], [668,750,673,750,703,771,698,771,668,750], [742,771,747,771,777,750,772,750,742,771], [742,750,747,750,777,771,772,771,742,750]], [[651,736,683,736,683,731,656,731,656,710,651,710,651,736],[683,710,651,710,651,715,678,715,678,725.5,683,725.5,683,710],[683,725.5,683,720.5,663,720.5,663,725.5,683,725.5],[701.5,736,680,710,688,710,701.5,728,712,710,720,710,701.5,736],[690,718,692,721,710,721,712,718,688,718],[720,710,725,710,725,736,720,736,720,710],[747,710,752,710,752,736,747,736,747,710],[720,736,725,736,741,725,733,725,720,736],[733,725,741,725,752,736,747,736,733,725],[757,736,790,736,790,731,762,731,762,710,757,710,757,736],[757,710,757,715,790,715,790,710,757,710],[757,720.5,757,725.5,790,725.5,790,720.5,757,720.5],[651,705,683,705,683,700,656,700,656,680,651,680,651,705],[683,680,651,680,651,685,678,685,678,705,683,705,683,680],[704,680,688,705,693,705,704,690,715,705,720,705,704,680],[725,705,755,705,755,700,730,700,730,680,725,680,725,705],[725,680,725,685,755,685,755,680,725,680],[725,695,725,690,755,690,755,695,725,695],[760,705,765,705,765,680,760,680,760,705],[790,705,760,705,760,700,785,700,785,690,790,690,790,705], [785,690,785,695,760,695,760,690,785,690], [790,680,783,680,767,695,775,695,790,680]], [[600,300,840,300,840,500,600,500,600,300]], [[640,340,800,340,800,460,640,460,640,340]], [[760,370,760,390,750,390,750,380,680,380,680,370,760,370],[680,430,680,380,690,380,690,420,760,420,760,430,680,430],[750,430,760,430,760,410,750,410,750,430],[755,400,745,410,765,410,755,400]], [[600,300,840,300,840,500,600,500,640,460,800,460,840,500,800,460,800,340,840,300,800,340,640,340,600,300,640,340,640,460], [760,390,760,370,680,370,680,430,760,430,760,410,765,410,755,400,745,410,750,410,750,420,690,420,690,380,750,380,750,390,760,390]], [[550,150,890,150,890,250,550,250,550,150]], [[570,170,870,170,870,230,570,230,570,170]], [[580,180,585,180,585,220,580,220,580,180],[645,180,640,180,640,220,645,220,645,180],[617.5,197.5,607.5,197.5,580,220,590,220,617.5,197.5],[617.5,197.5,607.5,197.5,635,220,645,220,617.5,197.5],[650,180,655,180,655,220,650,220,650,180], [650,220,650,215,715,215,715,220,650,220], [650,180,650,185,715,185,715,180,650,180], [650,202.5,650,197.5,715,197.5,715,202.5,650,202.5],[720,180,725,180,725,220,720,220,720,180],[785,180,780,180,780,220,785,220,785,180],[720,220,730,220,785,180,775,180,720,220],[790,180,790,220,795,220,795,185,860,185,860,180,790,180],[860,180,855,180,855,220,860,220,860,180]]

    drawing_circle(720, 750, 0, 0, 150, 255,255,255, GL_POLYGON)
    drawing_polygon(kulit, 0, 0, 243,228,208)
    drawing_polygon(rambut, 0, 0, 94,95,95)
    drawing_polygon(masker, 0, 0, 71,194,255)
    drawing_lines(garis_masker , 0, 0)
    drawing_polygon(matax, 0, 0, 0,0,0)
    drawing_polygon(gameover, 0, 0, 0,0,0)
    drawing_polygon(kotak1, 0, 0, 153,76,0)
    drawing_polygon(kotak2, 0, 0, 255,204,204)
    drawing_polygon(coba, 0, 0, 255,255,255)
    drawing_lines(garis_coba, 0, 0)
    drawing_polygon(kotak3, 0, 0, 153,76,0)
    drawing_polygon(kotak4, 0, 0, 255,204,204)
    drawing_polygon(exit, 0, 0, 0,0,0)

def menang():
    kulit, rambut, masker, garis_masker, alis, kotakputih, congratulation, kotak1, kotak2, coba, garis_coba, kotak3, kotak4, exit = [[631,764,616,764,601,749,601,719,616,704,631,704,631,689,720,644,810,688,810,704,825,704,840,718,840,748,825,763,810,763,810,820,631,820,631,764]], [[654,846,632,831,616,816,616,779,631,764,631,786,646,778,631,801,681,780,654,808,698,786,698,816,721,791,736,816,769,793,788,807,810,793,810,763,825,778,825,815,780,845,773,845,751,853,676,853,669,846,654,846]], [[646,742,646,682,720,644,795,681,795,742,720,726,646,742]], [[631,764,646,741,646,682,720,644,795,681,795,741,810,763,795,741,720,741,646,741]], [[668,771,698,771,698,778,668,778,646,764,668,771], [772,771,742,771,742,778,772,778,795,763,772,771]], [[570,850,570,900,870,900,870,850,570,850],[590,600,590,650,850,650,850,600,590,600]], [[580,890,598.5,890,598.5,885,585,885,585,860,580,860,580,890],[580,860,580,865,598.5,865,598.5,860,580,860],[601.5,890,618.5,890,618.5,885,606.5,885,606.5,860,601.5,860,601.5,890],[618.5,860,601.5,860,601.5,865,613.5,865,613.5,890,618.5,890,618.5,860],[621.5,890,626.5,890,626.5,860,621.5,860,621.5,890],[638.5,890,633.5,890,633.5,860,638.5,860,638.5,890],[621.5,890,626.5,890,638.5,860,633.5,860,621.5,890],[641.5,890,658.5,890,658.5,885,646.5,885,646.5,860,641.5,860,641.5,890],[658.5,860,641.5,860,641.5,865,653.5,865,653.5,877.5,658.5,877.5,658.5,860],[658.5,877.5,650,877.5,650,872.5,658.5,872.5,658.5,877.5],[661.5,890,678.5,890,678.5,885,666.5,885,666.5,860,661.5,860,661.5,890],[678.5,872.5,661.5,872.5,661.5,877.5,673.5,877.5,673.5,890,678.5,890,678.5,872.5],[678.5,860,673.5,860,667.5,877.5,672.5,877.5,678.5,860], [690,891,680,860,685,860,690,880,696,860,701,860,690,891],[686.5,866,686.5,869,695,869,695,866,686.5,866],[697,890,717,890,717,885,697,885,697,890],[704.5,890,709.5,890,709.5,860,704.5,860,704.5,890],[720.5,860,720.5,890,725.5,890,725.5,865,737.5,865,737.5,860,720.5,860],[738.5,890,738.5,860,733.5,860,733.5,890,738.5,890],[741.5,860,741.5,890,746.5,890,746.5,865,758.5,865,758.5,860,741.5,860],[770,891,760,860,765,860,770,880,776,860,781,860,770,891],[766.5,866,766.5,869,775,869,775,866,766.5,866],[777,890,797,890,797,885,777,885,777,890],[784.5,890,789.5,890,789.5,860,784.5,860,784.5,890],[800,890,818,890,818,885,800,885,800,890],[806.5,890,811.5,890,811.5,860,806.5,860,806.5,890],[800,860,818,860,818,865,800,865,800,860],[821,890,839,890,839,885,826,885,826,860,821,860,821,890],[839,860,821,860,821,865,834,865,834,890,839,890,839,860],[842,890,847,890,847,860,842,860,842,890],[860,890,855,890,855,860,860,860,860,890],[842,890,847,890,860,860,855,860,842,890],[606.5,610,611.5,610,611.5,625,606.5,625,606.5,610],[609,627,613,640,618,640,608.5,615,600,640,605,640,609,625],[621,640,639,640,639,635,626,635,626,610,621,610,621,640],[639,610,621,610,621,615,634,615,634,640,639,640,639,610],[642,610,642,640,647,640,647,615,660,615,660,610,642,610],[660,640,655,640,655,610,660,610,660,640],[675, 640, 693, 640, 693, 635, 680, 635, 680, 622.5, 675, 622.5, 675, 640] ,[693, 610, 675, 610, 675, 615, 688, 615, 688, 627.5, 693, 627.5, 693, 610] ,[693, 622.5, 693, 627.5, 675, 627.5, 675, 622.5, 693, 622.5] ,[696, 610, 696, 640, 701, 640, 701, 615, 714, 615, 714, 610, 696, 610] ,[714, 610, 709, 610, 709, 640, 714, 640, 714, 610] ,[717, 640, 735, 640, 735, 635, 722, 635, 722, 610, 717, 610, 717, 640] ,[735, 622.5, 735, 640, 730, 640, 730, 627.5, 717, 627.5, 717, 622.5, 735, 622.5] ,[735, 610, 730, 610, 725, 625, 730, 625, 735, 610] ,[747, 610, 756, 640, 751, 640, 747, 622, 743, 640, 738, 640, 747, 610] ,[759, 640, 777, 640, 777, 635, 759, 635, 759, 640] ,[759, 610, 759, 615, 777, 615, 777, 610, 759, 610] ,[765.5, 640, 770.5, 640, 770.5, 610, 765.5, 610, 765.5, 640] ,[789, 610, 798, 640, 793, 640, 789, 622, 785, 640, 780, 640, 789, 610] ,[801, 640, 819, 640, 819, 635, 806, 635, 806, 610, 801, 610, 801, 640] ,[801, 610, 819, 610, 819, 615, 801, 615, 801, 610] ,[801, 622.5, 819, 622.5, 819, 627.5, 801, 627.5, 801, 622.5] ,[822, 640, 835, 640, 835, 635, 827, 635, 827, 610, 822, 610, 822, 640] ,[835, 610, 822, 610, 822, 615, 835, 615, 835, 640, 840, 635, 840, 615, 835, 610]], [[600,300,840,300,840,500,600,500,600,300]], [[640,340,800,340,800,460,640,460,640,340]], [[760,370,760,390,750,390,750,380,680,380,680,370,760,370],[680,430,680,380,690,380,690,420,760,420,760,430,680,430],[750,430,760,430,760,410,750,410,750,430],[755,400,745,410,765,410,755,400]], [[600,300,840,300,840,500,600,500,640,460,800,460,840,500,800,460,800,340,840,300,800,340,640,340,600,300,640,340,640,460], [760,390,760,370,680,370,680,430,760,430,760,410,765,410,755,400,745,410,750,410,750,420,690,420,690,380,750,380,750,390,760,390]], [[550,150,890,150,890,250,550,250,550,150]], [[570,170,870,170,870,230,570,230,570,170]], [[580,180,585,180,585,220,580,220,580,180],[645,180,640,180,640,220,645,220,645,180],[617.5,197.5,607.5,197.5,580,220,590,220,617.5,197.5],[617.5,197.5,607.5,197.5,635,220,645,220,617.5,197.5],[650,180,655,180,655,220,650,220,650,180], [650,220,650,215,715,215,715,220,650,220], [650,180,650,185,715,185,715,180,650,180], [650,202.5,650,197.5,715,197.5,715,202.5,650,202.5],[720,180,725,180,725,220,720,220,720,180],[785,180,780,180,780,220,785,220,785,180],[720,220,730,220,785,180,775,180,720,220],[790,180,790,220,795,220,795,185,860,185,860,180,790,180],[860,180,855,180,855,220,860,220,860,180]]

    drawing_circle(720, 750, 0, 0, 150, 255,255,255, GL_POLYGON)
    drawing_polygon(kulit, 0, 0, 243,228,208)
    drawing_polygon(rambut, 0, 0, 94,95,95)
    drawing_polygon(masker, 0, 0, 71,194,255)
    drawing_lines(garis_masker , 0, 0)
    drawing_polygon(alis, 0, 0, 23,13,1)
    drawing_circle(679,756, 0, 0, 5, 0,0,0, GL_POLYGON)
    drawing_circle(762,756, 0, 0, 5, 0,0,0, GL_POLYGON)
    drawing_polygon(kotakputih, 0, 0, 255,255,255)
    drawing_polygon(congratulation, 0, 0, 0,0,0)
    drawing_polygon(kotak1, 0, 0, 153,76,0)
    drawing_polygon(kotak2, 0, 0, 255,204,204)
    drawing_polygon(coba, 0, 0, 255,255,255)
    drawing_lines(garis_coba, 0, 0)
    drawing_polygon(kotak3, 0, 0, 153,76,0)
    drawing_polygon(kotak4, 0, 0, 255,204,204)
    drawing_polygon(exit, 0, 0, 0,0,0)

def tampilan_score():
    score_terbaru = str(score)
    glColor3ub(0,0,0)
    for j in ([50,995,60,995,60,992,53,992,53,976.5,50,976.5,50,995],[50,976.5,50,973.5,60,973.5,60,976.5,50,976.5], [60,955,50,955,50,958,57,958,57,976.5,60,976.5,60,955], [63,995,73,995,73,992,66,992,66,958,63,958,63,995], [63,955,63,958,73,958,73,955,63,955], [76,995,86,995,86,992,79,992,79,958,76,958,76,995], [86,955,76,955,76,958,83,958,83,992,86,992,86,955], [89,995,99,995,99,992,92,992,92,955,89,955,89,995], [99,973.5,92,973.5,92,976.5,96,976.5,96,992,99,992,99,973.5], [99,955,96,955,91,976.5,94,976.5,99,955], [102,995,112,995,112,992,105,992,105,958,102,958,102,995], [102,955,102,958,112,958,112,955,102,955], [102,973.5,102,976.5,112,976.5,112,973.5,102,973.5], [118,971.5,121,971.5,121,968.5,118,968.5,118,971.5], [118,978.5,121,978.5,121,981.5,118,981.5,118,978.5]):
        glBegin(GL_POLYGON)
        for i in range(0,len(j),2):
            if i != len(j)-2:
                glVertex2f(j[i]-(13*(len(score_terbaru)-1))+1298,j[i+1])
        glEnd()
    for j in range(len(score_terbaru)):
        for k in data_angka[score_terbaru[(len(score_terbaru)-1-j)]]:
            glBegin(GL_POLYGON)
            for i in range(0,len(k),2):
                if i != len(k)-2:
                    glVertex2f(k[i]-(13*j)+1298,k[i+1])
            glEnd()

def countdown():
    global batas_waktu, waktu_habis, ganti_detik,detik, waktu_spawn,score
    if len(str(timer)) < 4:
        ganti_detik = False
    elif len(str(timer)) >= 4 and detik != str(timer)[0] and timer > 0 and nyawa != 0:
        detik = str(timer)[0]
        ganti_detik = True
    elif len(str(timer)) >= 4 and detik == str(timer)[0]:
        ganti_detik = False

    if ganti_detik:
        if str(batas_waktu)[-2:] == '00':
            batas_waktu -= 41
        else:
            batas_waktu -= 1
        waktu_spawn += 1
        score += 10

    if batas_waktu <= 0:
        waktu_habis = True

    str_bataswaktu = str(batas_waktu)
    if len(str_bataswaktu) < 3:
        str_bataswaktu = '0' + str_bataswaktu
        if len(str_bataswaktu) <= 2:
            str_bataswaktu = '0' + str_bataswaktu

    drawing_polygon(([689.5,995,699.5,995,699.5,992,692.5,992,692.5,958,689.5,958,689.5,995],[699.5,955,689.5,955,689.5,958,696.5,958,696.5,992,699.5,992,699.5,955],[718.5,971.5,721.5,971.5,721.5,968.5,718.5,968.5,718.5,971.5],[718.5,978.5,721.5,978.5,721.5,981.5,718.5,981.5,718.5,978.5]), 0, 0, 0,0,0)
    
    for j in range(len(str_bataswaktu)):
        for k in data_angka[str(str_bataswaktu[j])]:
            glBegin(GL_POLYGON)
            for i in range(0,len(k),2):
                if j >= 1:
                    glVertex2f(k[i]+(13*(j-1))+600.5,k[i+1])
                elif i != len(k)-2:
                    glVertex2f(k[i]+13+562.5,k[i+1])
            glEnd() 

def bar_atas():
    nyawa1, nyawa2, nyawa3, bar = [[25,985,20,990,15,990,10,980,25,960,40,980,35,990,30,990,25,985]],[[65,985,60,990,55,990,50,980,65,960,80,980,75,990,70,990,65,985]],[[105,985,100,990,95,990,90,980,105,960,120,980,115,990,110,990,105,985]], [[0,950,1440,950,1440,1000,0,1000,0,950]]

    drawing_polygon(bar, 0, 0, 255,255,255)
    if nyawa >= 1 and not start_menu:
        drawing_polygon(nyawa1, 0, 0, 255,105,97)
        if nyawa >= 2 and not start_menu:
            drawing_polygon(nyawa2, 0, 0, 255,105,97)
            if nyawa >= 3 and not start_menu:
                drawing_polygon(nyawa3, 0, 0, 255,105,97) 

def kotak_hitam():
    glEnable(GL_BLEND)
    glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA)
    glColor4f(0,0,0,0.8)
    glBegin(GL_POLYGON)
    glVertex2f(0,0)
    glVertex2f(1440,0)
    glVertex2f(1440,950)
    glVertex2f(0,950)
    glEnd()

def matilampu_ingame():
    if batas_waktu <= 100:
        glEnable(GL_BLEND)
        glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA)
        glColor4f(0,0,0,0.7)
        for j in ([0,0,1440,0,1440,670 + pos_y,687 + pos_x,670 + pos_y,640+pos_x,717+pos_y,640 + pos_x,1000,0,1000,0,0],[1440,750+pos_y,1440,783+pos_y,800+pos_x,783+pos_y,800+pos_x,750+pos_y,1440,750+pos_y],[1440,670+pos_y,753+pos_x,670+pos_y,800+pos_x,717+pos_y,800+pos_x,750+pos_y,1440,750+pos_y,1440,670+pos_y],[720+pos_x,1000,640+pos_x,1000,640+pos_x,783+pos_y,687+pos_x,830+pos_y,753+pos_x,830+pos_y,800+pos_x,783+pos_y,800+pos_x,1000,720+pos_x,1000],[1440,1000,800+pos_x,1000,800+pos_x,783+pos_y,1440,783+pos_y,1440,1000]):
            glBegin(GL_POLYGON)
            for i in range(0,len(j),2):
                if i != len(j)-2:
                    glVertex2f(j[i],j[i+1])
            glEnd()

def cara_bermain():
    kotak3, kotak4, exit = [[550,150,890,150,890,250,550,250,550,150]], [[570,170,870,170,870,230,570,230,570,170]], [[580,180,585,180,585,220,580,220,580,180],[645,180,640,180,640,220,645,220,645,180],[617.5,197.5,607.5,197.5,580,220,590,220,617.5,197.5],[617.5,197.5,607.5,197.5,635,220,645,220,617.5,197.5],[650,180,655,180,655,220,650,220,650,180], [650,220,650,215,715,215,715,220,650,220], [650,180,650,185,715,185,715,180,650,180], [650,202.5,650,197.5,715,197.5,715,202.5,650,202.5],[720,180,725,180,725,220,720,220,720,180],[785,180,780,180,780,220,785,220,785,180],[720,220,730,220,785,180,775,180,720,220],[790,180,790,220,795,220,795,185,860,185,860,180,790,180],[860,180,855,180,855,220,860,220,860,180]]
    drawing_polygon([[570,600,870,600,870,900,570,900,570,600]],0,0,160,160,160)
    if page == 1:
        drawing_polygon([[470,450,970,450,970,520,470,520,470,450]],0,0,0,0,0)
        drawing_polygon([[990,720,1050,720,1050,780,990,780,990,720]],0,0,153,76,0)
        drawing_polygon([[995,725,1045,750,995,775,995,725]],0,0,255,204,204)
        drawing_text(575,500,'Anda akan mengendalikan karakter bernama Masman')
        drawing_text(570,480,'Gunakan tombol W A S D pada keyboard untuk bergerak')

    elif page == 2:
        drawing_polygon([[345,450,1090,450,1090,520,345,520,345,450]],0,0,0,0,0)
        drawing_polygon([[990,720,1050,720,1050,780,990,780,990,720]],0,0,153,76,0)
        drawing_polygon([[995,725,1045,750,995,775,995,725]],0,0,255,204,204)
        drawing_polygon([[390,720,450,720,450,780,390,780,390,720]],0,0,153,76,0)
        drawing_polygon([[445,725,445,775,395,750,445,725]],0,0,255,204,204)
        drawing_text(365,500,'Tujuan dari permainan adalah bertahan hidup hingga waktu habis untuk menunggu istri Masman yang sedang berada di toilet')
        drawing_text(380,480,'Berikan masker kepada Tamas (Manusia Tanpa Masker) dengan cara mengklik Tamas pada area jangkuan Masman')
        glPushMatrix()
        glScalef(1.5,1.5,1.5)
        glTranslatef(-240,-250,0)
        drawing_circle(780, 710, 0,0,25,102,255,102,GL_POLYGON)
        tamas_ingame(755,685)
        drawing_circle(660, 710, 0,0,25,102,255,102,GL_POLYGON)
        tamas_ingame(635,684)
        glPopMatrix()

    elif page == 3:
        drawing_polygon([[470,450,970,450,970,520,470,520,470,450]],0,0,0,0,0)
        drawing_polygon([[990,720,1050,720,1050,780,990,780,990,720]],0,0,153,76,0)
        drawing_polygon([[995,725,1045,750,995,775,995,725]],0,0,255,204,204)
        drawing_polygon([[390,720,450,720,450,780,390,780,390,720]],0,0,153,76,0)
        drawing_polygon([[445,725,445,775,395,750,445,725]],0,0,255,204,204)
        drawing_text(560,500,'Jangan biarkan Tamas terlalu lama tidak memakai masker')
        drawing_text(510,480,'karena Tamas dapat berubah menjadi Mater (Manusia Terkontiminasi Virus)')
        glPushMatrix()
        glScalef(1.5,1.5,1.5)
        glTranslatef(-240,-250,0)
        vuris_ingame(755,685,242,184,216)
        vuris_ingame(635,685,242,184,216)
        glPopMatrix()

    elif page == 4:
        drawing_polygon([[345,450,1090,450,1090,520,345,520,345,450]],0,0,0,0,0)
        drawing_polygon([[990,720,1050,720,1050,780,990,780,990,720]],0,0,153,76,0)
        drawing_polygon([[995,725,1045,750,995,775,995,725]],0,0,255,204,204)
        drawing_polygon([[390,720,450,720,450,780,390,780,390,720]],0,0,153,76,0)
        drawing_polygon([[445,725,445,775,395,750,445,725]],0,0,255,204,204)
        drawing_text(450,500,'Vuris (Virus) akan berkeliaran disekitar Masman sehingga Masman harus berhati-hati dalam bergerak')
        drawing_text(380,480,'Masman memiliki 3 nyawa, jika Masman menyentuh Tamas, Vuris, maupun Mater maka nyawa Masman akan berkurang')
        glPushMatrix()
        glScalef(1.5,1.5,1.5)
        glTranslatef(-240,-250,0)
        vuris_ingame(755,685,242,184,216)
        vuris_ingame(635,685,255,255,255)
        glPopMatrix()
        drawing_polygon([[595,885,590,890,585,890,580,880,595,860,610,880,605,890,600,890,595,885],[635,885,630,890,625,890,620,880,635,860,650,880,645,890,640,890,635,885],[675,885,670,890,665,890,660,880,675,860,690,880,685,890,680,890,685,885]], 0, 0, 255,105,97)
        drawing_lines([[595,885,590,890,585,890,580,880,595,860,610,880,605,890,600,890,595,885],[635,885,630,890,625,890,620,880,635,860,650,880,645,890,640,890,635,885],[675,885,670,890,665,890,660,880,675,860,690,880,685,890,680,890,675,885]],0,0)
    
    elif page == 5:
        drawing_polygon([[470,450,970,450,970,520,470,520,470,450]],0,0,0,0,0)
        drawing_polygon([[390,720,450,720,450,780,390,780,390,720]],0,0,153,76,0)
        drawing_polygon([[445,725,445,775,395,750,445,725]],0,0,255,204,204)
        drawing_polygon([[570,600,580,600,580,900,570,900,570,600],[870,600,860,600,860,900,870,900,870,600]],0,0,200,157,124)
        drawing_lines([[580,600,580,900],[860,600,860,900]],0,0)
        glColor3ub(255,204,204)
        drawing_text(565,500,'Bertahanlah selama 5 menit untuk mencapai kemenangan')
        drawing_text(495,480,'Masman akan kalah saat nyawanya habis ataupun terdapat 5 Mater disekitarnya')
        masman_ingame()

    if page != 5:
        glPushMatrix()
        glScalef(1.5,1.5,1.5)
        glTranslatef(-240,-250,0)
        masman_ingame()
        glPopMatrix()
    drawing_lines([[570,600,870,600,870,900,570,900,570,600]],0,0)
    drawing_polygon(kotak3, 0, 0, 153,76,0)
    drawing_polygon(kotak4, 0, 0, 255,204,204)
    drawing_polygon(exit, 0, 0, 0,0,0)

# fungsi untuk memanggil fungsi-fungsi lainnya
def display():
    global timer, masker_click, score,nyawa
    glClear(GL_COLOR_BUFFER_BIT)
    background_ingame()
    bar_atas()
    if waktu_habis:
        kotak_hitam()
        menang()
        tampilan_score()
        if data_score['hiscore'] < score:
            data_score['hiscore'] = score
            with open('hiscore.json', 'w') as file:
                json.dump(data_score, file)
    elif petunjuk:
        kotak_hitam()
        cara_bermain()
    elif start_menu and nyawa != 0 and not petunjuk:
        kotak_hitam()
        masman_startmenu()
        tampilan_score()
    elif not start_menu and not petunjuk:
        random_karakter()
        if len(pos_mater) >= 5:
            nyawa = 0
        elif len(pos_mater) > 0:
            for i in pos_mater:
                vuris_ingame(pos_mater[i][0]-25, pos_mater[i][1]-25,242,184,216)
        if masker_click:
            score += 100
            masker_click = False
        random_vuris()
        random_vuris1()
        matilampu_ingame()
        masman_ingame()
        movement()
        if nyawa <= 0:
            kotak_hitam()
            game_over()
            if data_score['hiscore'] < score:
                data_score['hiscore'] = score
                with open('hiscore.json', 'w') as file:
                    json.dump(data_score, file)
        bar_atas()
        tampilan_score()
        countdown()
    glFlush()

# fungsi untuk mengacak lokasi dari objek
def random_karakter():
    global masker_click, waktu_spawn, spawn
    if batas_waktu <= 300:
        spawn = 6
    if waktu_spawn % spawn == 0 and ganti_detik and not start_menu:
        if len(pos_karakter) > 0:
            try:
                for i in pos_karakter:
                    pos_mater[len(pos_mater)] = pos_karakter[i]
                    del pos_karakter[i]
            except RuntimeError: pass
        rand_x, rand_y = randint(25, 1415), randint(25, 885)
        pos_karakter[len(pos_karakter)] = [rand_x, rand_y]
        if batas_waktu <= 330:
            rand_x, rand_y = randint(25, 1415), randint(25, 885)
            pos_karakter[len(pos_karakter)] = [rand_x, rand_y]
    if len(pos_karakter) > 0:
        for i in pos_karakter:
            drawing_circle(pos_karakter[i][0], pos_karakter[i][1], 0,0,25,102,255,102,GL_POLYGON)
            tamas_ingame(pos_karakter[i][0]-25, pos_karakter[i][1]-25)

def random_vuris():
    global move, xvir,yvir,z
    if batas_waktu < 431:
        if waktu_spawn % 15 == 0  and ganti_detik and not start_menu and batas_waktu > 400:
            rand_x, rand_y = randint(200, 1200), randint(120, 700)
            pos_virus[len(pos_virus)+1] = [rand_x, rand_y]
            move, z = choices(['atas', 'bawah', 'kiri', 'kanan'])[0], 1
        if waktu_spawn % 25 == 0 and ganti_detik and len(pos_virus) > 0 and batas_waktu > 400:
            del pos_virus[len(pos_virus)]
        if len(pos_virus) > 0:
            if batas_waktu <= 400:
                if batas_waktu <= 200:
                    z = 2
                if (pos_virus[len(pos_virus)][0]) <= 40:
                    xvir = z
                    move = choices(['atas', 'bawah', 'kanan'])[0]
                elif (pos_virus[len(pos_virus)][0]) >= 1400:
                    xvir = -z
                    move = choices(['atas', 'bawah', 'kiri'])[0]
                elif (pos_virus[len(pos_virus)][1]) <= 40:
                    yvir = z
                    move = choices(['atas', 'kiri', 'kanan'])[0]
                elif (pos_virus[len(pos_virus)][1]) >= 910:
                    yvir = -z
                    move = choices(['bawah', 'kiri', 'kanan'])[0]
                elif move == 'atas' and (pos_virus[len(pos_virus)][1]) < 920:
                    yvir = z
                elif move == 'bawah' and (pos_virus[len(pos_virus)][1]) > 30:
                    yvir = -z 
                elif move == 'kiri' and (pos_virus[len(pos_virus)][0]) > 30:
                    xvir = -z
                elif move == 'kanan' and (pos_virus[len(pos_virus)][0]) < 1410:
                    xvir = z

                pos_virus[len(pos_virus)] = [pos_virus[len(pos_virus)][0]+xvir, pos_virus[len(pos_virus)][1]+yvir]
            vuris_ingame(pos_virus[len(pos_virus)][0]-25+xvir, pos_virus[len(pos_virus)][1]-25+yvir,255,255,255)

def random_vuris1():
    global move1, xvir1,yvir1,z1
    if batas_waktu < 231:
        if waktu_spawn % 15 == 0  and ganti_detik and not start_menu and batas_waktu > 225:
            rand_x, rand_y = randint(200, 1200), randint(120, 700)
            pos_virus1[len(pos_virus1)+1] = [rand_x, rand_y]
            move1, z1 = choices(['atas', 'bawah', 'kiri', 'kanan'])[0], 1
        if len(pos_virus1) > 0:
            if batas_waktu <= 400:
                if batas_waktu <= 200:
                    z1 = 2
                if (pos_virus1[len(pos_virus1)][0]) <= 40:
                    xvir1 = z1
                    move1 = choices(['atas', 'bawah', 'kanan'])[0]
                elif (pos_virus1[len(pos_virus1)][0]) >= 1400:
                    xvir1 = -z1
                    move1 = choices(['atas', 'bawah', 'kiri'])[0]
                elif (pos_virus1[len(pos_virus1)][1]) <= 40:
                    yvir1 = z1
                    move1 = choices(['atas', 'kiri', 'kanan'])[0]
                elif (pos_virus1[len(pos_virus1)][1]) >= 910:
                    yvir1 = -z1
                    move1 = choices(['bawah', 'kiri', 'kanan'])[0]
                elif move1 == 'atas' and (pos_virus1[len(pos_virus1)][1]) < 920:
                    yvir1 = z1
                elif move1 == 'bawah' and (pos_virus1[len(pos_virus1)][1]) > 30:
                    yvir1 = -z1
                elif move1 == 'kiri' and (pos_virus1[len(pos_virus1)][0]) > 30:
                    xvir1 = -z1
                elif move1 == 'kanan' and (pos_virus1[len(pos_virus1)][0]) < 1410:
                    xvir1 = z1

                pos_virus1[len(pos_virus1)] = [pos_virus1[len(pos_virus1)][0]+xvir1, pos_virus1[len(pos_virus1)][1]+yvir1]
            vuris_ingame(pos_virus1[len(pos_virus1)][0]-25+xvir1, pos_virus1[len(pos_virus1)][1]-25+yvir1,255,255,255)

# fungsi untuk membuat supaya mouse dapat bekerja seperti klik kiri
def input_mouse(button, state, x, y):
    global start_menu, score, masker_click, timer, nyawa, pos_x, pos_y, pos_karakter, waktu_habis, batas_waktu, move, xvir,yvir,z, waktu_spawn, spawn,sel_pos,detik, pos_mater, pos_virus,move1, xvir1,yvir1,z1,petunjuk,page
    tp_x, tp_y = 720 + pos_x, 750 + pos_y 
    if button == GLUT_LEFT_BUTTON and state == GLUT_DOWN and (start_menu or nyawa == 0 or waktu_habis or petunjuk):
        if (int((xscreen/1440) * 990) <= x <= int((xscreen/1440) * 1050) and int(yscreen/1000 * 100) <= y <= int(yscreen/1000 * 400)) and petunjuk and page < 5:
            page += 1
        elif (int((xscreen/1440) * 390) <= x <= int((xscreen/1440) * 450) and int(yscreen/1000 * 100) <= y <= int(yscreen/1000 * 400)) and petunjuk and page > 1:
            page -= 1
        elif (int((xscreen/1440) * 550) <= x <= int((xscreen/1440) * 890) and int(yscreen/1000 * 750) <= y <= int(yscreen/1000 * 850)) and petunjuk:
            petunjuk = False
            start_menu = True
        #kotak coba lagi
        elif (int((xscreen/1440) * 600) <= x <= int((xscreen/1440) * 840) and int(yscreen/1000 * 500) <= y <= int(yscreen/1000 * 700)) and (nyawa == 0 or waktu_habis):
            pos_x, pos_y, pos_karakter, timer, score, nyawa, waktu_habis, batas_waktu, pos_mater, pos_virus = 0, 0, {}, 0, 0, 3, False, 500, {}, {}
            move, xvir,yvir,z, waktu_spawn, spawn,sel_pos,detik,move1, xvir1,yvir1,z1 = 'stop',0,0,0,0,8,0,'abc','stop',0,0,0
            rand_x, rand_y = randint(25, 1415), randint(25, 885)
            if rand_x in range(690, 750):
                rand_y = (choices((randint(25,720), randint(780,885))))[0]
            pos_karakter[len(pos_karakter)] = [rand_x, rand_y]
            update(0)
        #kotak back to menu
        elif (int((xscreen/1440) * 550) <= x <= int((xscreen/1440) * 890) and int(yscreen/1000 * 750) <= y <= int(yscreen/1000 * 850)) and (nyawa == 0 or waktu_habis):
            start_menu, waktu_habis = True, False
            pos_x, pos_y, pos_karakter, timer, nyawa, batas_waktu, pos_mater, pos_virus = 0, 0, {}, 0, 3, 500,{}, {}
            move, xvir,yvir,z, waktu_spawn, spawn,sel_pos,detik,move1, xvir1,yvir1,z1 = 'stop',0,0,0,0,8,0,'abc','stop',0,0,0
            rand_x, rand_y = randint(25, 1415), randint(25, 885)
            if rand_x in range(690, 750):
                rand_y = (choices((randint(25,720), randint(780,885))))[0]
            pos_karakter[len(pos_karakter)] = [rand_x, rand_y]
            update(0)
        #kotak start
        elif (int((xscreen/1440) * 600) <= x <= int((xscreen/1440) * 840) and int(yscreen/1000 * 500) <= y <= int(yscreen/1000 * 700)) and start_menu:
            start_menu = False
            score = 0
        elif (int((xscreen/1440) * 550) <= x <= int((xscreen/1440) * 890) and int(yscreen/1000 * 750) <= y <= int(yscreen/1000 * 850)) and start_menu:
            petunjuk = True
        #kotak exit
        elif (int((xscreen/1440) * 550) <= x <= int((xscreen/1440) * 890) and int(yscreen/1000 * 880) <= y <= int(yscreen/1000 * 980)) and start_menu:
            glutLeaveMainLoop()

    elif button == GLUT_LEFT_BUTTON and state == GLUT_DOWN and not start_menu:
        try:
            if len(pos_karakter) > 0:
                for i in pos_karakter:
                    sel_x, sel_y =  tp_x - pos_karakter[i][0], tp_y - pos_karakter[i][1]
                    if (abs(sel_x) <= 65 or abs(sel_y) <= 65) and sqrt((sel_x)**2 + (sel_y)**2) <= 99 and sqrt(((1440/xscreen * x) - tp_x)**2 + (1000 - (1000/yscreen *y) - tp_y)**2) <= 74:
                        del pos_karakter[i]
                        masker_click = True
        except RuntimeError: pass

# fungsi yang berhubungan dengan collision antar objek dan gerakan Masman
def keypressed(key,x,y):
    keystates[ord(key)] = True

def keyup(key,x,y):
    keystates[ord(key)] = False

def movement():
    global pos_x, pos_y, nyawa
    def collision(pos):
        global pos_x, pos_y, nyawa
        tp_x, tp_y = 720 + pos_x, 750 + pos_y
        for i in pos:
            sel_x, sel_y =  tp_x - pos[i][0], tp_y - pos[i][1]
            if (abs(sel_x)**2 + abs(sel_y)**2)**(0.5) <= 48:
                if (sel_x < 0 and sel_y == 0) or (sel_x < 0 and (sel_y < 0 or sel_y > 0) and (sel_x < sel_y or sel_x == sel_y)):
                    pos_x -= 35
                elif sel_x > 0 and sel_y == 0 or (sel_x > 0 and (sel_y < 0 or sel_y > 0) and (sel_x > sel_y or sel_x == sel_y)):
                    pos_x += 35
                elif sel_x == 0 and sel_y > 0 or ((sel_x < 0 or sel_x > 0) and sel_y > 0 and sel_x < sel_y):
                    pos_y += 35
                elif sel_x == 0 and sel_y < 0 or ((sel_x < 0 or sel_x > 0) and sel_y < 0 and sel_x > sel_y) :
                    pos_y -= 35
                nyawa -= 1

    if len(pos_karakter) > 0:
        collision(pos_karakter)
    if len(pos_mater) > 0:
        collision(pos_mater)
    if len(pos_virus1) > 0:
        collision(pos_virus1)
    if len(pos_virus) > 0:
        collision(pos_virus)

    w, a, s, d = 119, 97, 115, 100
    if (keystates[w] and keystates[a] and keystates[s] and keystates[d]) or (keystates[w] == False and keystates[a] and keystates[s] == False and keystates[d]) or (keystates[w] and keystates[a] == False and keystates[s] and keystates[d] == False):
        pos_x += 0 + (0.5*sel_pos)
    elif (keystates[w] and keystates[a] and keystates[s] == False and keystates[d] == False) and (pos_y <= 175 and pos_x >= -695): 
        pos_y += 1 + (0.5*sel_pos)
        pos_x -= 1 + (0.5*sel_pos)
    elif (keystates[a] and keystates[s] and keystates[w] == False and keystates[d] == False) and (pos_y >= -725 and pos_x >= -695):
        pos_x -= 1 + (0.5*sel_pos)
        pos_y -= 1 + (0.5*sel_pos)
    elif (keystates[s] and keystates[d] and keystates[w] == False and keystates[a] == False) and (pos_y >= -725 and pos_x <= 695): 
        pos_y -= 1 + (0.5*sel_pos)
        pos_x += 1 + (0.5*sel_pos)
    elif (keystates[d] and keystates[w] and keystates[s] == False and keystates[a] == False) and (pos_y <= 175 and pos_x <= 695): 
        pos_x += 1 + (0.5*sel_pos)
        pos_y += 1 + (0.5*sel_pos)
    elif ((keystates[w] and keystates[a] == False and keystates[s] == False and keystates[d] == False) or (keystates[w] and keystates[a] and keystates[d])) and pos_y <= 175: 
        pos_y += 1 + (0.5*sel_pos)
    elif ((keystates[a] and keystates[w] == False and keystates[s] == False and keystates[d] == False) or (keystates[a] and keystates[w] and keystates[s])) and pos_x >= -695:
        pos_x -= 1 + (0.5*sel_pos)
    elif ((keystates[s] and keystates[a] == False and keystates[w] == False and keystates[d] == False) or (keystates[s] and keystates[a] and keystates[d])) and pos_y >= -725: 
        pos_y -= 1 + (0.5*sel_pos)
    elif ((keystates[d] and keystates[a] == False and keystates[s] == False and keystates[w] == False) or (keystates[d] and keystates[w] and keystates[s])) and pos_x <= 695: 
        pos_x += 1 + (0.5*sel_pos)

# fungsi untuk mengupdate frame per second sekaligus menghitung detik 
def update(value):
    global timer, sel_pos
    if nyawa != 0: 
        glutPostRedisplay()
        sel_pos = len(pos_mater) + len(pos_virus) + len(pos_virus1)
        if not start_menu and timer <= 9000:
            timer += 5 + sel_pos
        elif timer >= 9000:
            timer = 0
        if len(pos_virus) <= 0 or len(pos_mater) <= 0:
            glutTimerFunc(4,update,0)
        elif len(pos_virus) > 0 or len(pos_mater) <= 0:
            glutTimerFunc(1,update,0)

# fungsi untuk melakukan looping semua program yang telah ditulis
def init():
    glClearColor(0.0, 0.0, 0.0, 1.0)
    gluOrtho2D(0, 1440.0, 0, 1000.0)

def main():
    glutInit()
    glutInitDisplayMode(GLUT_SINGLE|GLUT_RGB)
    glutInitWindowSize(xscreen,yscreen)
    glutInitWindowPosition(0,0)
    glutCreateWindow("Mask Hero")
    glutDisplayFunc(display)
    glutKeyboardFunc(keypressed)
    glutKeyboardUpFunc(keyup)
    glutMouseFunc(input_mouse)
    update(0)
    init()
    glutMainLoop()
main()